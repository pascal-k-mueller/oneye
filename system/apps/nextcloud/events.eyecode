<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright © 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

// First we create the NAMEOFAPP_on_NAMEOFBUTTON function.
// In this case, the application is Nextcloud and the
// button is called "Nextcloud_Button":
function Nextcloud_on_Nextcloud_Save_Button($params = '') {
	//get initial data
  $file = um('getCurrentUserDir').CONF_USER_DIR.'/nextcloud/conf.xml';
  //check if config exists
  if(!vfs('real_fileExists',array($file))) {
    //create config if not exists
    vfs('mkdir', array(um('getCurrentUserDir').CONF_USER_DIR.'/nextcloud'));
		vfs('real_create',array($file));
		$myF['nextcloud'] = array();
		eyeXML('setXMLfile',array($file,$myF));
	}
  //read config
	$content = eyeXML('getXMLconfig',array('nextcloud','conf.xml'));
  //set lastsync to never
  $lastSync = 0;
  if($content['nextcloud'][0]['lastSync'][0] != 0) {
    $lastSync = $content['nextcloud'][0]['lastSync'][0];
  }
  //set config attributes
  $content['nextcloud'][0]['url'][0] = trim($GLOBALS['Nextcloud_URL_Textbox']->text);
	$content['nextcloud'][0]['username'][0] = trim($GLOBALS['Nextcloud_User_Textbox']->text);
	$content['nextcloud'][0]['password'][0] = trim($GLOBALS['Nextcloud_Password_Textbox']->text);
  $content['nextcloud'][0]['lastSync'][0] = $lastSync;
  //write config
  $myXml = eyeXML('array2xml',array($content));
	$fp = vfs('real_open',array($file,'w'));
	fwrite($fp,$myXml);
	fclose($fp);
  //subscribe to fileevents
  vfs('suscribeEvents',array("nextcloud","file_events"));
  //infrom user
  eyeX('messageBox',array('content' => 'Saved'));
}

function Nextcloud_on_Nextcloud_Sync_Button($params = '') {
  proc('launch',array('nextcloud',array("sync")));
}
// If the application we are developing needs to send / receive
// messages, it is necessary to update its contents through the
// eyeWidget's "updateContent" method.
// It is an automatic function and you can just copy it tp
// your applications, which use messages by simply changing the
// app's name in the function:
function Nextcloud_on_Message($params = '') {
	eyeWidgets('updateContent',$params);
}
// The NAMEOFAPP_on_Close() function will be executed every time
// the user closes the application. We recommended you to always send
// the close message to remove the application from the processes table.
function Nextcloud_on_Close($params = '') {
	proc('end');
}
?>